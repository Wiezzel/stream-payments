
//! Autogenerated weights for `pallet_stream_payments`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-03-04, STEPS: `20`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024
//! Benchmarks computed with `MaxStreams = 128`

// Executed Command:
// ./target/release/node-template
// benchmark
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_stream_payments
// --extrinsic=*
// --steps=20
// --repeat=20
// --json-file=raw.json
// --output=../stream-payments/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_stream_payments`.
pub trait WeightInfo {
	fn open_stream() -> Weight;
	fn close_stream(_i: u32, ) -> Weight;
	fn on_initialize(i: u32, ) -> Weight;
}

/// Weight functions for `pallet_stream_payments`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: StreamPayments Streams (r:1 w:1)
	fn open_stream() -> Weight {
		(14_531_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: StreamPayments Streams (r:1 w:1)
	fn close_stream(_i: u32, ) -> Weight {
		(32_260_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: StreamPayments Streams (r:1 w:0)
	// Storage: System Account (r:6 w:0)
	fn on_initialize(i: u32, ) -> Weight {
		(14_411_000 as Weight)
			// Standard Error: 31_000
			.saturating_add((7_985_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(i as Weight)))
	}
}
